/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package monoply.game;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.Timer;
import static monoply.game.Board.findCountry;
import static monoply.game.playPanel.playersNumberSpinner;
import static monoply.game.playPanel.player1TextField;
import static monoply.game.playPanel.player2TextField;
import static monoply.game.playPanel.player3TextField;
import static monoply.game.playPanel.player4TextField;
import static monoply.game.playPanel.player5TextField;
import static monoply.game.playPanel.player6TextField;
import static monoply.game.playPanel.player7TextField;
import static monoply.game.playPanel.player8TextField;
import static monoply.game.playPanel.playersNumber;

/**
 *
 * @author mahmoud
 */
public class GamePanel extends javax.swing.JPanel {
public int intialPlace=0;
    private JLabel[] labels;
    public GamePanel() {
        initComponents();
        labels = new JLabel[8];
        initLabels();
        hideButton();
    }
    
    private void initLabels() {
        labels[0] = Player1Money;
        labels[1] = Player2Money;
        labels[2] = Player3Money;
        labels[3] = Player4Money;
        labels[4] = Player5Money;
        labels[5] = Player6Money;
        labels[6] = Player7Money;
        labels[7] = Player8Money;
    }
      public void Sell(){
          showButton();
          CountriesGroup[] countriesGroup = currentPlayer.getGroupsArray();
          String[] countriesName =  countriesGroup[0].showCountries();
           
          
          
          
          MessageTextField.setText("You don't Have Money, if u want to buy ");
      }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        BoardPanel = new Board(playersNumber);
        rollDiceButton = new javax.swing.JButton();
        DiceResultLabel = new javax.swing.JLabel();
        dice1 = new monoply.game.Dice();
        dice2 = new monoply.game.Dice();
        jPanel1 = new javax.swing.JPanel();
        Player1Name = new javax.swing.JLabel();
        Player1Money = new javax.swing.JLabel();
        Player2Money = new javax.swing.JLabel();
        Player2Name = new javax.swing.JLabel();
        Player3Name = new javax.swing.JLabel();
        Player3Money = new javax.swing.JLabel();
        Player4Money = new javax.swing.JLabel();
        Player4Name = new javax.swing.JLabel();
        Player5Name = new javax.swing.JLabel();
        Player5Money = new javax.swing.JLabel();
        Player6Money = new javax.swing.JLabel();
        Player6Name = new javax.swing.JLabel();
        Player7Money = new javax.swing.JLabel();
        Player7Name = new javax.swing.JLabel();
        Player8Money = new javax.swing.JLabel();
        Player8Name = new javax.swing.JLabel();
        YButton = new javax.swing.JButton();
        MessageTextField = new javax.swing.JTextField();
        NButton = new javax.swing.JButton();
        countriesComboBx = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        buildBtn = new javax.swing.JButton();
        playerLabel = new java.awt.Label();

        jPasswordField1.setText("jPasswordField1");

        setDoubleBuffered(false);
        setMinimumSize(new java.awt.Dimension(1200, 1200));
        setPreferredSize(new java.awt.Dimension(1200, 1200));

        BoardPanel.setMinimumSize(new java.awt.Dimension(580, 580));

        rollDiceButton.setText("Roll Dice!");
        rollDiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollDiceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BoardPanelLayout = new javax.swing.GroupLayout(BoardPanel);
        BoardPanel.setLayout(BoardPanelLayout);
        BoardPanelLayout.setHorizontalGroup(
            BoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BoardPanelLayout.createSequentialGroup()
                .addGroup(BoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BoardPanelLayout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(DiceResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BoardPanelLayout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addGroup(BoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rollDiceButton)
                            .addGroup(BoardPanelLayout.createSequentialGroup()
                                .addComponent(dice1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dice2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(456, Short.MAX_VALUE))
        );
        BoardPanelLayout.setVerticalGroup(
            BoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BoardPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DiceResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rollDiceButton)
                .addGap(18, 18, 18)
                .addGroup(BoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dice1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dice2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(369, 369, 369))
        );

        Player1Name.setText("Player1 ");

        Player1Money.setText("Money: 1500$");

        Player2Money.setText("Money: 1500$");

        Player2Name.setText("Player2");

        Player3Name.setText("Player3");

        Player3Money.setText("Money: 1500$");

        Player4Money.setText("Money: 1500$");

        Player4Name.setText("Player4");

        Player5Name.setText("Player3");

        Player5Money.setText("Money: 1500$");

        Player6Money.setText("Money: 1500$");

        Player6Name.setText("Player6");

        Player7Money.setText("Money: 1500$");

        Player7Name.setText("Player7");

        Player8Money.setText("Money: 1500$");

        Player8Name.setText("Player8");

        YButton.setText("Y");
        YButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YButtonActionPerformed(evt);
            }
        });

        MessageTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MessageTextField.setText("Welcome to our game");
        MessageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MessageTextFieldActionPerformed(evt);
            }
        });

        NButton.setText("N");
        NButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NButtonActionPerformed(evt);
            }
        });

        jButton1.setText("SELL");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buildBtn.setText("Build");
        buildBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Player1Money)
                    .addComponent(Player1Name)
                    .addComponent(Player5Money)
                    .addComponent(Player5Name))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Player2Money)
                    .addComponent(Player2Name)
                    .addComponent(Player6Money)
                    .addComponent(Player6Name))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Player3Money)
                    .addComponent(Player3Name)
                    .addComponent(Player7Money)
                    .addComponent(Player7Name))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Player8Name)
                    .addComponent(Player8Money)
                    .addComponent(Player4Money)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Player4Name)
                        .addGap(110, 110, 110)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MessageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(YButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(NButton))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(countriesComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44)
                                        .addComponent(jButton1)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(buildBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(204, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Player2Name)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Player2Money)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Player6Name)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Player6Money))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Player4Name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Player4Money))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Player3Name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Player3Money))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Player1Name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Player1Money)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Player5Name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Player5Money))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Player7Name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Player7Money))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Player8Name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Player8Money))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(MessageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(YButton)
                            .addComponent(NButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(countriesComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buildBtn))
        );

        playerLabel.setText("Player: 1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BoardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 565, Short.MAX_VALUE)
                        .addComponent(playerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BoardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(467, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void playersInfo() {
        switch (playersNumber) {
            case 2:
                Player1Name.setText(player1TextField.getText());
                Player2Name.setText(player2TextField.getText());
                Player3Name.setVisible(false);
                Player3Money.setVisible(false);
                Player4Name.setVisible(false);
                Player4Money.setVisible(false);
                Player5Name.setVisible(false);
                Player5Money.setVisible(false);
                Player6Name.setVisible(false);
                Player6Money.setVisible(false);
                Player7Name.setVisible(false);
                Player7Money.setVisible(false);
                Player8Name.setVisible(false);
                Player8Money.setVisible(false);
                break;
            case 3:
                Player1Name.setText(player1TextField.getText());
                Player2Name.setText(player2TextField.getText());
                Player3Name.setText(player3TextField.getText());
                Player3Name.setVisible(true);
                Player3Money.setVisible(true);
                Player4Name.setVisible(false);
                Player4Money.setVisible(false);
                Player5Name.setVisible(false);
                Player5Money.setVisible(false);
                Player6Name.setVisible(false);
                Player6Money.setVisible(false);
                Player7Name.setVisible(false);
                Player7Money.setVisible(false);
                Player8Name.setVisible(false);
                Player8Money.setVisible(false);
                break;
            case 4:
                Player1Name.setText(player1TextField.getText());
                Player2Name.setText(player2TextField.getText());
                Player3Name.setText(player3TextField.getText());
                Player4Name.setText(player4TextField.getText());
                Player3Name.setVisible(true);
                Player3Money.setVisible(true);
                Player4Name.setVisible(true);
                Player4Money.setVisible(true);
                Player5Name.setVisible(false);
                Player5Money.setVisible(false);
                Player6Name.setVisible(false);
                Player6Money.setVisible(false);
                Player7Name.setVisible(false);
                Player7Money.setVisible(false);
                Player8Name.setVisible(false);
                Player8Money.setVisible(false);
                break;
            case 5:
                Player1Name.setText(player1TextField.getText());
                Player2Name.setText(player2TextField.getText());
                Player3Name.setText(player3TextField.getText());
                Player4Name.setText(player4TextField.getText());
                Player5Name.setText(player5TextField.getText());
                Player3Name.setVisible(true);
                Player3Money.setVisible(true);
                Player4Name.setVisible(true);
                Player4Money.setVisible(true);
                Player5Name.setVisible(true);
                Player5Money.setVisible(true);
                Player6Name.setVisible(false);
                Player6Money.setVisible(false);
                Player7Name.setVisible(false);
                Player7Money.setVisible(false);
                Player8Name.setVisible(false);
                Player8Money.setVisible(false);
                break;
            case 6:
                Player1Name.setText(player1TextField.getText());
                Player2Name.setText(player2TextField.getText());
                Player3Name.setText(player3TextField.getText());
                Player4Name.setText(player4TextField.getText());
                Player5Name.setText(player5TextField.getText());
                Player6Name.setText(player6TextField.getText());
                Player3Name.setVisible(true);
                Player3Money.setVisible(true);
                Player4Name.setVisible(true);
                Player4Money.setVisible(true);
                Player5Name.setVisible(true);
                Player5Money.setVisible(true);
                Player6Name.setVisible(true);
                Player6Money.setVisible(true);
                Player7Name.setVisible(false);
                Player7Money.setVisible(false);
                Player8Name.setVisible(false);
                Player8Money.setVisible(false);
                break;
            case 7:
                Player1Name.setText(player1TextField.getText());
                Player2Name.setText(player2TextField.getText());
                Player3Name.setText(player3TextField.getText());
                Player4Name.setText(player4TextField.getText());
                Player5Name.setText(player5TextField.getText());
                Player6Name.setText(player6TextField.getText());
                Player7Name.setText(player7TextField.getText());
                Player3Name.setVisible(true);
                Player3Money.setVisible(true);
                Player4Name.setVisible(true);
                Player4Money.setVisible(true);
                Player5Name.setVisible(true);
                Player5Money.setVisible(true);
                Player6Name.setVisible(true);
                Player6Money.setVisible(true);
                Player7Name.setVisible(true);
                Player7Money.setVisible(true);
                Player8Name.setVisible(false);
                Player8Money.setVisible(false);
                break;
            case 8:
                Player1Name.setText(player1TextField.getText());
                Player2Name.setText(player2TextField.getText());
                Player3Name.setText(player3TextField.getText());
                Player4Name.setText(player4TextField.getText());
                Player5Name.setText(player5TextField.getText());
                Player6Name.setText(player6TextField.getText());
                Player7Name.setText(player7TextField.getText());
                Player8Name.setText(player8TextField.getText());
                Player3Name.setVisible(true);
                Player3Money.setVisible(true);
                Player4Name.setVisible(true);
                Player4Money.setVisible(true);
                Player5Name.setVisible(true);
                Player5Money.setVisible(true);
                Player6Name.setVisible(true);
                Player6Money.setVisible(true);
                Player7Name.setVisible(true);
                Player7Money.setVisible(true);
                Player8Name.setVisible(true);
                Player8Money.setVisible(true);
                break;
        }
    }
        
    public void hideButton() {
        YButton.setVisible(false);
        NButton.setVisible(false);
    }

    public void showButton() {
        YButton.setVisible(true);
        NButton.setVisible(true);
    }
    
    private void rollDiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollDiceButtonActionPerformed
        // TODO add your handling code here:
        this.move();
       /* int diceNumber = Dice.getDice();
         
        currentPlayer = Board.players.get(Board.turn);
        DiceResultLabel.setText(diceNumber + "");
        
        while(currentPlayer.getInJail()) {
            System.out.println("here");
            currentPlayer.setInJail(false);
            System.out.println(currentPlayer.place);
            Board.turn = (Board.turn + 1) % Board.players.size();
            currentPlayer = Board.players.get(Board.turn);
        }
        
        updateCountriesComboBx();

        System.out.println(Board.players.indexOf(currentPlayer));
        
        System.out.println("Current has jail card : " + currentPlayer.HasJailCard);
        int firstPlace = currentPlayer.place;
        int secondPlace = (firstPlace + diceNumber) % Board.placesArr.size();
        currentPlayer.x = Board.placesArr.get(secondPlace).coords.x;
        currentPlayer.y = Board.placesArr.get(secondPlace).coords.y;
        currentPlayer.place = secondPlace;
        System.out.println("first place : " + firstPlace);
        System.out.println("Dice : " + diceNumber);
        System.out.println("second place : " + secondPlace);*/

        
       
        
      //  System.out.println(currentPlayer+":"+currentPlayer.money);


       
        
    }//GEN-LAST:event_rollDiceButtonActionPerformed
    private void move (){
        rollDiceButton.setEnabled(false);
        int dice1Num = dice1.getDice();
        int dice2Num = dice2.getDice();
        diceNumber = dice1Num + dice2Num;
        
        
         
        currentPlayer = Board.players.get(Board.turn);
        DiceResultLabel.setText(diceNumber + "");
        
        while(currentPlayer.getInJail()) {
            System.out.println("here");
            currentPlayer.setInJail(false);
            System.out.println(currentPlayer.place);
            Board.turn = (Board.turn + 1) % Board.players.size();
            currentPlayer = Board.players.get(Board.turn);
        }
        
        updateCountriesComboBx();

        System.out.println(Board.players.indexOf(currentPlayer));
        
        System.out.println("Current has jail card : " + currentPlayer.HasJailCard);
        
        int firstPlace = currentPlayer.place;
         intialPlace = (firstPlace)% Board.placesArr.size();;
        int secondPlace = (firstPlace + diceNumber) % Board.placesArr.size();
        GamePanel gp = this;
 
            
                 //while (moves<=diceNumber){
                      
               // System.out.println("moves "+moves);
          
       // boolean stop = false;
                       Timer timer = new Timer(500, new ActionListener() {
                           private boolean stop = false;
                           
                          
                           @Override
        public void actionPerformed(ActionEvent e) {
            //if(!stop) {
                 if (intialPlace==secondPlace)
                {
                    rollDiceButton.setEnabled(true);
                    currentPlayer.place=( currentPlayer.place+1)% Board.placesArr.size();;
                    currentPlayer.x = Board.placesArr.get(currentPlayer.place).coords.x + (Board.players.indexOf(currentPlayer) * Board.placesArr.get(currentPlayer.place).offsetX);
                    currentPlayer.y = Board.placesArr.get(currentPlayer.place).coords.y + (Board.players.indexOf(currentPlayer) * Board.placesArr.get(currentPlayer.place).offsetY);
                    gp.repaint();
((Timer)e.getSource()).stop();  
   System.out.println("Player place : " + currentPlayer.place);
    labelNum = Board.turn;
        MessageTextField.setText("");
        gp.playerLabel.setText("Player: "+(Board.turn+1));
        //this.repaint();
        MysetText(currentPlayer.place);
        if((firstPlace+diceNumber)>39&&(secondPlace!=0)){
            currentPlayer.money+=200;
            labels[labelNum].setText("Money: " +currentPlayer.money);
        }
        if(!(dice1Num == dice2Num))
        Board.turn = (Board.turn + 1) % Board.players.size();
        
                }
                 else {
                gp.repaint();
                gp.animate();
                 }
              //  stop  =true;
           // } else {
                //((Timer)e.getSource()).stop();
           // }
                    }
    });
    //timer.setRepeats(true);
   // timer.setDelay(50);
    timer.start();
        
       
        
         
        
       
        
        
                // }
        
             
        
        
       // currentPlayer.place = secondPlace;
        System.out.println("first place : " + firstPlace);
        System.out.println("Dice : " + diceNumber);
        System.out.println("second place : " + secondPlace);
    }
    public void animate ( )
    {
                        currentPlayer.x = Board.placesArr.get(intialPlace).coords.x + (Board.turn * Board.placesArr.get(intialPlace).offsetX);
        currentPlayer.y = Board.placesArr.get(intialPlace).coords.y + (Board.turn * Board.placesArr.get(intialPlace).offsetY);
        currentPlayer.place=intialPlace;
        intialPlace= (intialPlace+1)% Board.placesArr.size();
         System.out.println("place "+intialPlace);
        
       
    }

    private void YButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YButtonActionPerformed
        // TODO add your handling code here:yes
        Country country = (Country) currentPlace;
        if (country.getPrice() <= currentPlayer.money) {

            MessageTextField.setText("coungratulation you get "+country.getName());
            currentPlayer.money -= country.getPrice();
            labels[labelNum].setText("Money: " +currentPlayer.money);
            //Player1Money.setText("Money: " + currentPlayer.money);
            country.sold();
            country.setOwner(currentPlayer);
            currentPlayer.addCountry(country);
            updateCountriesComboBx();
            hideButton();
        } else {
            MessageTextField.setText("Sorry u dont have money");
            hideButton();
        }
    }//GEN-LAST:event_YButtonActionPerformed
    
    private void MysetText(int i) {
        if(i !=2 || i != 17 || i != 33 || i != 7  || i != 22 || i != 36 )
        { currentPlace = Board.getPlace(i);}
        if (i == 30)// jail
        {
            SpecialPlaces sp = (SpecialPlaces) Board.placesArr.get(30);
            sp.SpecialPlaceAction(currentPlayer, specialCards, Board.players);
            this.repaint();
        } else if (i == 4 || i == 38) // taxes
        {
            MessageTextField.setText("You just paid 75$ Taxes" );
            SpecialPlaces sp = (SpecialPlaces) Board.placesArr.get(i);
            sp.SpecialPlaceAction(currentPlayer, specialCards, Board.players);
            labels[labelNum].setText("Money: " +currentPlayer.money);
            hideButton();
        } else if (i == 20) // bus
        {
        }else if( i ==2 || i == 17 || i == 33)//chest
        {
            //specialCards.DrawCard(1,currentPlayer,Board.players);
            SpecialPlaces sp = (SpecialPlaces) Board.placesArr.get(i);
            sp.SpecialPlaceAction(currentPlayer, specialCards, Board.players);
            //MessageTextField.setText(specialCards.getDrawnCard().getDescription());
            labels[labelNum].setText("Money: " +currentPlayer.money);
            this.repaint();
            hideButton();
        }
        
        else if ( i == 7  || i == 22 || i == 36 ) //chance
        {
            SpecialPlaces sp = (SpecialPlaces) Board.placesArr.get(i);
            sp.SpecialPlaceAction(currentPlayer, specialCards, Board.players);
            //MessageTextField.setText(specialCards.getDrawnCard().getDescription());
            labels[labelNum].setText("Money: " +currentPlayer.money);
            this.repaint();
            hideButton();
        } else if (i == 0) {
            MessageTextField.setText("Start the new round and get 200$");
            currentPlayer.money += 200;
            labels[labelNum].setText("Money: " +currentPlayer.money);
            hideButton();
        } 
        
        else {
            if(currentPlace instanceof Country) {
                Country country = (Country) currentPlace;
                if (country.isOwner(currentPlayer)) {
                    MessageTextField.setText("Welcome to " + country.getName());
                    
                    hideButton();
                } else if (country.checkAvailable()) {
                    MessageTextField.setText("You can buy " +country.getName() +"for just " + country.getPrice() + "$");
                   
                    showButton();
                } else {
                    MessageTextField.setText("Please pay " + country.getTotalFees() + "$ " + " for visting "+country.getName());
                    currentPlayer.money -= country.getTotalFees();
                    labels[labelNum].setText("Money: " +currentPlayer.money);
                    
                    hideButton();
                }
            }
        }
    }
    private void NButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NButtonActionPerformed
        MessageTextField.setText("preese Roll Dice button to got to next turn");
        hideButton();
    }//GEN-LAST:event_NButtonActionPerformed

    private void buildBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildBtnActionPerformed
        // TODO add your handling code here:
        String text = (String) countriesComboBx.getSelectedItem();
        
        for(int i = 0; i < Board.placesArr.size(); i++) {
            if(Board.placesArr.get(i) instanceof Country) {
                Country country = (Country) Board.placesArr.get(i);
                
                if(country.getName().equals(text)) {
                    if(country.getCanBuildHousesFlag()) {
                        if(currentPlayer.money > country.getPrice()) {
                            country.buildHouse();
                        } else {
                            System.out.println("You don't have enough money");
                        }
                    } else if(country.getCanBuildHotelFlag()) {
                        if(currentPlayer.money > country.getPrice()) {
                            country.buildHotel();
                        } else {
                            System.out.println("You don't have enough money");
                        }
                    } else {
                        System.out.print("You have to get all the ");
                        System.out.println("countries of the same color");
                    }
                }
            }
        }
    }//GEN-LAST:event_buildBtnActionPerformed

    private void MessageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MessageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MessageTextFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         String x =  countriesComboBx.getSelectedItem().toString();
         CountriesGroup[] groups = currentPlayer.getGroupsArray();
         for(int i = 0; i < groups.length; i++) {
            ArrayList<Country> countries = groups[i].getCountries();
            for(int j = 0; j < countries.size(); j++) {
               if( x.equalsIgnoreCase(countries.get(j).getName()))
                       {
                           
                           //countriesComboBx.removeItem(countriesComboBx.getSelectedItem());
                           countries.get(j).SoldCountry();
                              MessageTextField.setText("You sell "+  
                                      countries.get(j).getName() 
                    +"for just "+  countries.get(j).getPrice()+"$" );
                    currentPlayer.money += countries.get(j).getPrice();
                    countries.remove(countries.get(i));
                    updateCountriesComboBx();
                    labels[labelNum].setText("Money: " +currentPlayer.money);       
                       }
            }
        }
         
       
         
            
            
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void updateCountriesComboBx() {
        countriesComboBx.removeAllItems();
        
        CountriesGroup[] groups = currentPlayer.getGroupsArray();
        
        if(groups == null) {
            System.out.println("hello");
        }
        
        for(int i = 0; i < groups.length; i++) {
            ArrayList<Country> countries = groups[i].getCountries();
            for(int j = 0; j < countries.size(); j++) {
                countriesComboBx.addItem(countries.get(j).getName());
            }
        }
      
    }
    
    private SpecialCards specialCards = new SpecialCards();
    private int labelNum;
    private Places currentPlace;
    private Player currentPlayer;
    private Timer timer;
    private int diceNumber;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BoardPanel;
    private javax.swing.JLabel DiceResultLabel;
    public static javax.swing.JTextField MessageTextField;
    private javax.swing.JButton NButton;
    private javax.swing.JLabel Player1Money;
    private javax.swing.JLabel Player1Name;
    private javax.swing.JLabel Player2Money;
    private javax.swing.JLabel Player2Name;
    private javax.swing.JLabel Player3Money;
    private javax.swing.JLabel Player3Name;
    private javax.swing.JLabel Player4Money;
    private javax.swing.JLabel Player4Name;
    private javax.swing.JLabel Player5Money;
    private javax.swing.JLabel Player5Name;
    private javax.swing.JLabel Player6Money;
    private javax.swing.JLabel Player6Name;
    private javax.swing.JLabel Player7Money;
    private javax.swing.JLabel Player7Name;
    private javax.swing.JLabel Player8Money;
    private javax.swing.JLabel Player8Name;
    private javax.swing.JButton YButton;
    private javax.swing.JButton buildBtn;
    private javax.swing.JComboBox<String> countriesComboBx;
    private monoply.game.Dice dice1;
    private monoply.game.Dice dice2;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private java.awt.Label playerLabel;
    private javax.swing.JButton rollDiceButton;
    // End of variables declaration//GEN-END:variables
}
